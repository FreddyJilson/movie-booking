@page "/"

@using ui.Components
@using ui.Models
@using System.Text
@using System.Net

@inject NavigationManager _navigationManager;
@inject IHttpClientFactory _client;
@inject IDialogService DialogService
@inject ISnackbar Snackbar

<MudContainer Class="mt-16" MaxWidth="MaxWidth.Medium">
    <MudText Typo="Typo.h3" Align="Align.Center" GutterBottom="true"></MudText>
    <MudGrid Spacing="6" Class="mt-16">
        <MudItem xs="12">
            <MudText Typo="Typo.h4" Class="d-flex justify-center" GutterBottom="true">Welcome to Linklo!</MudText>
            <MudText Typo="Typo.h5" Class="d-flex justify-center" GutterBottom="true">Linklo is a shareable url link shorten service.</MudText>
            <MudGrid>
                <MudItem xs="12">
                    <MudTextField @bind-Value="UrlLink" Label="Enter URL link to shorten" Variant="Variant.Outlined"/>
                </MudItem>
                <MudItem xs="12" Class="d-flex justify-center">
                    @if (!InProgress) {
                        <MudButton Style="width: 200px; margin: 2px;" OnClick="UrlShorten" Variant="Variant.Filled" DisableElevation="true" Color="Color.Primary" Size="Size.Large" Class="mt-8">Shorten</MudButton>
                    }
                    else {
                        <MudProgressCircular Size="Size.Large" Color="Color.Primary" Indeterminate="true"/>
                    }
                </MudItem>
            </MudGrid>

        </MudItem>
    </MudGrid>
</MudContainer>

@code {
    private string UrlLink { get; set; }
    private bool InProgress { get; set; } = false;
    DialogOptions maxWidth = new DialogOptions() { MaxWidth = MaxWidth.Medium, FullWidth = true, DisableBackdropClick = true };

    public async void UrlShorten() {
        if (UrlLink is "" or null) {
            Snackbar.Add("Please enter a URL link to shorten!", Severity.Error); 
            InProgress = false;
        }
        else {
            InProgress = true;
            var client = _client.CreateClient();
            var form = new FormLinkShorten(UrlLink);
            var formAsJson = JsonConvert.SerializeObject(form);
            var response = await client.PostAsync(Route.BaseUrl + Route.ApiV1Route + Route.ShortenLinkRoute,
                new StringContent(formAsJson, Encoding.UTF8,
                    Common.JsonMediaType));

            if (response.StatusCode == HttpStatusCode.Created) {
                var shortenedLink = response.Content.ReadFromJsonAsync<FormLinkShorten>();
                var parameters = new DialogParameters();
                parameters.Add("UrlLink", shortenedLink.Result.link);
                DialogService.Show<UrlShortenedDialog>("Your shortened URL link is ready to share! " +
                                                       "Store it safely as it won't be shown again.", parameters, maxWidth);
            }
            else {
                Snackbar.Add("The link could not be shortened!", Severity.Error);
            }
        }
    }
}